b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
# for (n in n_s){
#   densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
#   yrange <- c(yrange, densite_post);
#   lines(grille, densite_post, n = 100, type = "l", col = col[i %% length(col)]);
#   # plot(grille, densite_post, type = "l");
#   par(new = TRUE);
#   i <- i + 1;
# }
i <- 5;
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = col[i %% length(col)]);
i <- 6;
par(new = TRUE);
abline(v = theta_0, lwd = 3, col = col[i %% length(col)]);
dev.new() # un nouveau graphe
n <- 1:N;
E_theta_x <- (a + n)/(a + b + cumsum(X));
par(new = TRUE);
plot(n, E_theta_x, type = "l", col = "red");
abline(h = theta_0, lwd = 3, col = "blue");
set.seed(80,kind="Marsaglia-Multicarry");
theta_0 <- 0.6;
# etape: a
N <- 500;
X <- rgeom(N, theta_0) + 1;
grille <- seq(0, 1, by <- 0.01);
L <- length(grille);
grille <- grille[-c(1,L)]; # delete the first and the last elements in grille.
# etape: b
n_s <- c(5, 20, 100, 500);
a <- 1/2;
b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
# Exercice:2
theta_0 <- 0.6;
# etape: a
N <- 500;
X <- rgeom(N, theta_0) + 1;
grille <- seq(0, 1, by <- 0.01);
L <- length(grille);
grille <- grille[-c(1,L)]; # delete the first and the last elements in grille.
# etape: b
n_s <- c(5, 20, 100, 500);
a <- 1/2;
b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i])
i <- 5;
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = col[i %% length(col)]);
i <- 6;
abline(v = theta_0, lwd = 3, col = col[i %% length(col)]);
dev.new() # un nouveau graphe
n <- 1:N;
E_theta_x <- (a + n)/(a + b + cumsum(X));
par(new = TRUE);
plot(n, E_theta_x, type = "l", col = "red");
abline(h = theta_0, lwd = 3, col = "blue");
4:1
i <- 5;
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = col[i %% length(col)]);
i <- 6;
abline(v = theta_0, lwd = 3, col = col[i %% length(col)]);
theta_0 <- 0.6;
# etape: a
N <- 500;
X <- rgeom(N, theta_0) + 1;
grille <- seq(0, 1, by <- 0.01);
L <- length(grille);
grille <- grille[-c(1,L)]; # delete the first and the last elements in grille.
# etape: b
n_s <- c(5, 20, 100, 500);
a <- 1/2;
b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
# for (n in n_s){
#   densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
#   yrange <- c(yrange, densite_post);
#   lines(grille, densite_post, n = 100, type = "l", col = col[i %% length(col)]);
#   # plot(grille, densite_post, type = "l");
#   par(new = TRUE);
#   i <- i + 1;
# }
i <- 5;
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = col[i %% length(col)]);
i <- 6;
abline(v = theta_0, lwd = 3, col = col[i %% length(col)]);
i <- 6;
abline(v = theta_0, col = col[i %% length(col)]);
theta_0 <- 0.6;
# etape: a
N <- 500;
X <- rgeom(N, theta_0) + 1;
grille <- seq(0, 1, by <- 0.01);
L <- length(grille);
grille <- grille[-c(1,L)]; # delete the first and the last elements in grille.
# etape: b
n_s <- c(5, 20, 100, 500);
a <- 1/2;
b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
# for (n in n_s){
#   densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
#   yrange <- c(yrange, densite_post);
#   lines(grille, densite_post, n = 100, type = "l", col = col[i %% length(col)]);
#   # plot(grille, densite_post, type = "l");
#   par(new = TRUE);
#   i <- i + 1;
# }
i <- 5;
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = col[i %% length(col)]);
i <- 6;
abline(v = theta_0, col = col[i %% length(col)]);
abline(v = theta_0, col ="black");
6%%6
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = "brown");
theta_0 <- 0.6;
# etape: a
N <- 500;
X <- rgeom(N, theta_0) + 1;
grille <- seq(0, 1, by <- 0.01);
L <- length(grille);
grille <- grille[-c(1,L)]; # delete the first and the last elements in grille.
# etape: b
n_s <- c(5, 20, 100, 500);
a <- 1/2;
b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
# for (n in n_s){
#   densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
#   yrange <- c(yrange, densite_post);
#   lines(grille, densite_post, n = 100, type = "l", col = col[i %% length(col)]);
#   # plot(grille, densite_post, type = "l");
#   par(new = TRUE);
#   i <- i + 1;
# }
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = "brown");
# abline(v = theta_0, col = col[i %% length(col)]);
abline(v = theta_0, col ="black");
legend("topright", lwd = 2, col = col(c(4:1,5,6)),
legend = c("n = 500", "n = 100", "n = 50", "n = 5", "pi(theta)", "theta = 0.6"))
legend("topright", lwd = 2, col = col[c(4:1,5,6],
legend("topright", lwd = 2, col = col[c(4:1,5,6],
legend = c("n = 500", "
legend("topright", lwd = 2, col = col[c(4:1,5,6],
legend = c("n = 500", "n = 100", "n = 50", "n = 5", "pi(theta)", "theta = 0.6"))
dev.new() # un nouveau graphe
legend("topright", lwd = 2, col = col[c(4:1,5,6],
legend = c("n = 500", "n = 100", "n = 50", "n = 5", "pi(theta)", "theta = 0.6"))
theta_0 <- 0.6;
# etape: a
N <- 500;
X <- rgeom(N, theta_0) + 1;
grille <- seq(0, 1, by <- 0.01);
L <- length(grille);
grille <- grille[-c(1,L)]; # delete the first and the last elements in grille.
# etape: b
n_s <- c(5, 20, 100, 500);
a <- 1/2;
b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
# for (n in n_s){
#   densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
#   yrange <- c(yrange, densite_post);
#   lines(grille, densite_post, n = 100, type = "l", col = col[i %% length(col)]);
#   # plot(grille, densite_post, type = "l");
#   par(new = TRUE);
#   i <- i + 1;
# }
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = "brown");
# abline(v = theta_0, col = col[i %% length(col)]);
abline(v = theta_0, col ="black");
legend("topright", lwd = 2, col = col[c(4:1,5,6],
legend = c("n = 500", "n = 100", "n = 50", "n = 5", "pi(theta)", "theta = 0.6"))
col[4:1]
c(4:1,5,6)
col[c(4:1,5,6)]
theta_0 <- 0.6;
# etape: a
N <- 500;
X <- rgeom(N, theta_0) + 1;
grille <- seq(0, 1, by <- 0.01);
L <- length(grille);
grille <- grille[-c(1,L)]; # delete the first and the last elements in grille.
# etape: b
n_s <- c(5, 20, 100, 500);
a <- 1/2;
b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
# for (n in n_s){
#   densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
#   yrange <- c(yrange, densite_post);
#   lines(grille, densite_post, n = 100, type = "l", col = col[i %% length(col)]);
#   # plot(grille, densite_post, type = "l");
#   par(new = TRUE);
#   i <- i + 1;
# }
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = "brown");
# abline(v = theta_0, col = col[i %% length(col)]);
abline(v = theta_0, col ="black");
legend("topright", lwd = 2, col = col[c(4:1,5,6)],
legend = c("n = 500", "n = 100", "n = 50", "n = 5", "pi(theta)", "theta = 0.6"));
legend("topright", col = col[c(4:1,5,6)],
legend = c("n = 500", "n = 100", "n = 50", "n = 5", "pi(theta)", "theta = 0.6"));
theta_0 <- 0.6;
# etape: a
N <- 500;
X <- rgeom(N, theta_0) + 1;
grille <- seq(0, 1, by <- 0.01);
L <- length(grille);
grille <- grille[-c(1,L)]; # delete the first and the last elements in grille.
# etape: b
n_s <- c(5, 20, 100, 500);
a <- 1/2;
b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
# for (n in n_s){
#   densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
#   yrange <- c(yrange, densite_post);
#   lines(grille, densite_post, n = 100, type = "l", col = col[i %% length(col)]);
#   # plot(grille, densite_post, type = "l");
#   par(new = TRUE);
#   i <- i + 1;
# }
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = "brown");
# abline(v = theta_0, col = col[i %% length(col)]);
abline(v = theta_0, col ="black");
legend("topright", col = col[c(4:1,5,6)],
legend = c("n = 500", "n = 100", "n = 50", "n = 5", "pi(theta)", "theta = 0.6"));
theta_0 <- 0.6;
# etape: a
N <- 500;
X <- rgeom(N, theta_0) + 1;
grille <- seq(0, 1, by <- 0.01);
L <- length(grille);
grille <- grille[-c(1,L)]; # delete the first and the last elements in grille.
# etape: b
n_s <- c(5, 20, 100, 500);
a <- 1/2;
b <- 3/2;
col = c("red", "blue", "yellow", "green", "grey", "black");
dev.new() # un nouveau graphe
i <- 4;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b - n + sum(X[1:n]));
plot(grille, densite_post, type = "l", col = col[i], xlab = "theta", ylab = "density of pi_theta");
i <- 3;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 2;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
i <- 1;
n <- n_s[i];
densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
lines(spline(grille, densite_post), type = "l", col = col[i]);
# for (n in n_s){
#   densite_post <- dbeta(grille, a+n, b-n+sum(X[1:n]));
#   yrange <- c(yrange, densite_post);
#   lines(grille, densite_post, n = 100, type = "l", col = col[i %% length(col)]);
#   # plot(grille, densite_post, type = "l");
#   par(new = TRUE);
#   i <- i + 1;
# }
densite_pi <- dbeta(grille, a, b);
lines(spline(grille, densite_pi), type = "l", col = "brown");
# abline(v = theta_0, col = col[i %% length(col)]);
abline(v = theta_0, col ="black");
legend("topright", col = col[c(4:1,5,6)],
legend = c("n = 500", "n = 100", "n = 50", "n = 5", "pi(theta)", "theta = 0.6"));
legend("topright", lwd = 1, col = col[c(4:1,5,6)],
legend = c("n = 500", "n = 100", "n = 50", "n = 5", "pi(theta)", "theta = 0.6"));
dev.new() # un nouveau graphe
n <- 1:N;
E_theta_x <- (a + n)/(a + b + cumsum(X));
par(new = TRUE);
plot(n, E_theta_x, type = "l", col = "red");
abline(h = theta_0, lwd = 3, col = "blue");
title("l'espérance a posteriori E_pi");
?qnorm
A_n
a <- 5/100;
n <- c(10, 100, 1000);
quantille <- a/2;
A_n <- qnorm(quantille)/sqrt(n);
A_n
A_n
a <- 5/100;
n <- c(10, 100, 1000);
quantille <- 1-a/2;
A_n <- qnorm(quantille)/sqrt(n);
A_n
1.96/sqrt(n)
t(matrix(c(n,A_n),3))
a <- 5/100;
n <- c(10, 100, 1000);
quantille <- 1-a/2;
A_n <- qnorm(quantille)/sqrt(n);
t(matrix(c(n,A_n),3))
?ggplot
?gplot
require(ggplot2)
a <- 5/100;
n <- c(10, 100, 1000);
quantille <- 1-a/2;
A_n <- qnorm(quantille)/sqrt(n);
t(matrix(c(n,A_n),3))
u <- 0.1;
n0 <- 0;
R_H1 <- c();
beta <- 0.95;
n <- seq(50,5000,200);
A_n <- qnorm(quantille)/sqrt(n);
for (i in n){
temp_R_H1 <- pnorm(q = A_n[which(i==n)], mean = u, sd = sqrt(1/i)) - pnorm(q = - A_n[which(i==n)], mean = u, sd = sqrt(1/i));
R_H1 <- c(R_H1, temp_R_H1);
}
n0 <- n[min(which((1 - R_H1) >= beta))];
n0
plot(n, R_H1, type = 'l');
n <- seq(50,n0,1);
A_n <- qnorm(quantille)/sqrt(n);
R_H1 <- c();
for (i in n){
temp_R_H1 <- pnorm(q = A_n[which(i==n)], mean = u, sd = sqrt(1/i)) - pnorm(q = - A_n[which(i==n)], mean = u, sd = sqrt(1/i));
R_H1 <- c(R_H1, temp_R_H1);
}
n0 <- n[min(which((1 - R_H1) >= beta))];
n0
?latex
?markdown
help("Sweave", package="utils")
testfile <- system.file("Sweave", "Sweave-test-1.Rnw", package = "utils")
## enforce par(ask = FALSE)
options(device.ask.default = FALSE)
## create a LaTeX file
Sweave(testfile)
## This can be compiled to PDF by
## tools::texi2pdf("Sweave-test-1.tex")
## or outside R by
## R CMD texi2pdf Sweave-test-1.tex
## which sets the appropriate TEXINPUTS path.
## create an R source file from the code chunks
Stangle(testfile)
## which can be sourced, e.g.
source("Sweave-test-1.R")
Sweave-test-1.Rnw
?markdown
